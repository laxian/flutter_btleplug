// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.20.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<crate::api::ble::peripheral::Peripheral>>
@sealed
class Peripheral extends RustOpaque {
  Peripheral.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  Peripheral.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_Peripheral,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_Peripheral,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_PeripheralPtr,
  );
}

/// This is the BleDevice intended to show in Dart/Flutter
class BleDevice {
  final String id;
  final String name;

  const BleDevice({
    required this.id,
    required this.name,
  });

  static Future<BleDevice> fromPeripheral(
          {required Peripheral peripheral, dynamic hint}) =>
      RustLib.instance.api
          .bleDeviceFromPeripheral(peripheral: peripheral, hint: hint);

  @override
  int get hashCode => id.hashCode ^ name.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is BleDevice &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          name == other.name;
}
